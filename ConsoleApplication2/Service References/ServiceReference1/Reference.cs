//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication2.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.HardwareCompleteListResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.SiteResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.SiteDetailResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.ListResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.DataResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.AlertCompleteListResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.GatewayConfigResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.CommandsResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.HeartbeatResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.UploadResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.TimestampResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.ObjectsResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.KeysResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.ByteObjectsResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.LoginResult))]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringCode {
            get {
                return this.StringCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StringCodeField, value) != true)) {
                    this.StringCodeField = value;
                    this.RaisePropertyChanged("StringCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HardwareCompleteListResult", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class HardwareCompleteListResult : ConsoleApplication2.ServiceReference1.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.HardwareComplete[] HardwareListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.HardwareComplete[] HardwareList {
            get {
                return this.HardwareListField;
            }
            set {
                if ((object.ReferenceEquals(this.HardwareListField, value) != true)) {
                    this.HardwareListField = value;
                    this.RaisePropertyChanged("HardwareList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteResult", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.SiteDetailResult))]
    public partial class SiteResult : ConsoleApplication2.ServiceReference1.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.Site DataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.Site Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteDetailResult", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class SiteDetailResult : ConsoleApplication2.ServiceReference1.SiteResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset LastCommunicationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset LastCommunicationDate {
            get {
                return this.LastCommunicationDateField;
            }
            set {
                if ((this.LastCommunicationDateField.Equals(value) != true)) {
                    this.LastCommunicationDateField = value;
                    this.RaisePropertyChanged("LastCommunicationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListResult", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class ListResult : ConsoleApplication2.ServiceReference1.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.ListItem[] ItemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.ListItem[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataResult", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class DataResult : ConsoleApplication2.ServiceReference1.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.DataBin[] DataSetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.DataBin[] DataSet {
            get {
                return this.DataSetField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSetField, value) != true)) {
                    this.DataSetField = value;
                    this.RaisePropertyChanged("DataSet");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlertCompleteListResult", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class AlertCompleteListResult : ConsoleApplication2.ServiceReference1.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.AlertComplete[] AlertListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.AlertComplete[] AlertList {
            get {
                return this.AlertListField;
            }
            set {
                if ((object.ReferenceEquals(this.AlertListField, value) != true)) {
                    this.AlertListField = value;
                    this.RaisePropertyChanged("AlertList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GatewayConfigResult", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class GatewayConfigResult : ConsoleApplication2.ServiceReference1.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ServerTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.DeviceConfig[] devicesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ServerTime {
            get {
                return this.ServerTimeField;
            }
            set {
                if ((this.ServerTimeField.Equals(value) != true)) {
                    this.ServerTimeField = value;
                    this.RaisePropertyChanged("ServerTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.DeviceConfig[] devices {
            get {
                return this.devicesField;
            }
            set {
                if ((object.ReferenceEquals(this.devicesField, value) != true)) {
                    this.devicesField = value;
                    this.RaisePropertyChanged("devices");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommandsResult", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class CommandsResult : ConsoleApplication2.ServiceReference1.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.Command[] CommandListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.Command[] CommandList {
            get {
                return this.CommandListField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandListField, value) != true)) {
                    this.CommandListField = value;
                    this.RaisePropertyChanged("CommandList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeartbeatResult", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class HeartbeatResult : ConsoleApplication2.ServiceReference1.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandParamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] DownloadFirmwareField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Command {
            get {
                return this.CommandField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandField, value) != true)) {
                    this.CommandField = value;
                    this.RaisePropertyChanged("Command");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandID {
            get {
                return this.CommandIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandIDField, value) != true)) {
                    this.CommandIDField = value;
                    this.RaisePropertyChanged("CommandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandParam {
            get {
                return this.CommandParamField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandParamField, value) != true)) {
                    this.CommandParamField = value;
                    this.RaisePropertyChanged("CommandParam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] DownloadFirmware {
            get {
                return this.DownloadFirmwareField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadFirmwareField, value) != true)) {
                    this.DownloadFirmwareField = value;
                    this.RaisePropertyChanged("DownloadFirmware");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadResult", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class UploadResult : ConsoleApplication2.ServiceReference1.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UploadCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UploadCount {
            get {
                return this.UploadCountField;
            }
            set {
                if ((this.UploadCountField.Equals(value) != true)) {
                    this.UploadCountField = value;
                    this.RaisePropertyChanged("UploadCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimestampResult", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class TimestampResult : ConsoleApplication2.ServiceReference1.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ServerUTCField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastData {
            get {
                return this.LastDataField;
            }
            set {
                if ((this.LastDataField.Equals(value) != true)) {
                    this.LastDataField = value;
                    this.RaisePropertyChanged("LastData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdate {
            get {
                return this.LastUpdateField;
            }
            set {
                if ((this.LastUpdateField.Equals(value) != true)) {
                    this.LastUpdateField = value;
                    this.RaisePropertyChanged("LastUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ServerUTC {
            get {
                return this.ServerUTCField;
            }
            set {
                if ((this.ServerUTCField.Equals(value) != true)) {
                    this.ServerUTCField = value;
                    this.RaisePropertyChanged("ServerUTC");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectsResult", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class ObjectsResult : ConsoleApplication2.ServiceReference1.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ObjectsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Objects {
            get {
                return this.ObjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsField, value) != true)) {
                    this.ObjectsField = value;
                    this.RaisePropertyChanged("Objects");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeysResult", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class KeysResult : ConsoleApplication2.ServiceReference1.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] KeysField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Keys {
            get {
                return this.KeysField;
            }
            set {
                if ((object.ReferenceEquals(this.KeysField, value) != true)) {
                    this.KeysField = value;
                    this.RaisePropertyChanged("Keys");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ByteObjectsResult", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class ByteObjectsResult : ConsoleApplication2.ServiceReference1.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[][] ObjectsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[][] Objects {
            get {
                return this.ObjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsField, value) != true)) {
                    this.ObjectsField = value;
                    this.RaisePropertyChanged("Objects");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResult", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class LoginResult : ConsoleApplication2.ServiceReference1.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AE_AdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AE_Admin {
            get {
                return this.AE_AdminField;
            }
            set {
                if ((this.AE_AdminField.Equals(value) != true)) {
                    this.AE_AdminField = value;
                    this.RaisePropertyChanged("AE_Admin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((this.CustomerIDField.Equals(value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HardwareComplete", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class HardwareComplete : ConsoleApplication2.ServiceReference1.Hardware {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.FieldInfo[] FieldListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.FieldInfo[] FieldList {
            get {
                return this.FieldListField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldListField, value) != true)) {
                    this.FieldListField = value;
                    this.RaisePropertyChanged("FieldList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hardware", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.Gateway))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.Inverter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.StringCombiner))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.HardwareComplete))]
    public partial class Hardware : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaudField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GatewayIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HardwareIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Baud {
            get {
                return this.BaudField;
            }
            set {
                if ((object.ReferenceEquals(this.BaudField, value) != true)) {
                    this.BaudField = value;
                    this.RaisePropertyChanged("Baud");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceAddress {
            get {
                return this.DeviceAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceAddressField, value) != true)) {
                    this.DeviceAddressField = value;
                    this.RaisePropertyChanged("DeviceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceCode {
            get {
                return this.DeviceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceCodeField, value) != true)) {
                    this.DeviceCodeField = value;
                    this.RaisePropertyChanged("DeviceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((this.DeviceIDField.Equals(value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceNum {
            get {
                return this.DeviceNumField;
            }
            set {
                if ((this.DeviceNumField.Equals(value) != true)) {
                    this.DeviceNumField = value;
                    this.RaisePropertyChanged("DeviceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Flags {
            get {
                return this.FlagsField;
            }
            set {
                if ((this.FlagsField.Equals(value) != true)) {
                    this.FlagsField = value;
                    this.RaisePropertyChanged("Flags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GatewayID {
            get {
                return this.GatewayIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GatewayIDField, value) != true)) {
                    this.GatewayIDField = value;
                    this.RaisePropertyChanged("GatewayID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HardwareID {
            get {
                return this.HardwareIDField;
            }
            set {
                if ((this.HardwareIDField.Equals(value) != true)) {
                    this.HardwareIDField = value;
                    this.RaisePropertyChanged("HardwareID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Mask {
            get {
                return this.MaskField;
            }
            set {
                if ((object.ReferenceEquals(this.MaskField, value) != true)) {
                    this.MaskField = value;
                    this.RaisePropertyChanged("Mask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNum {
            get {
                return this.SerialNumField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumField, value) != true)) {
                    this.SerialNumField = value;
                    this.RaisePropertyChanged("SerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gateway", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class Gateway : ConsoleApplication2.ServiceReference1.Hardware {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GatewayTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GatewayType {
            get {
                return this.GatewayTypeField;
            }
            set {
                if ((this.GatewayTypeField.Equals(value) != true)) {
                    this.GatewayTypeField = value;
                    this.RaisePropertyChanged("GatewayType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Inverter", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class Inverter : ConsoleApplication2.ServiceReference1.Hardware {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.ArrayModel ArrayModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.InverterModel InverterModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.PanelModel PanelModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.PanelMounting PanelMountingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] PerformanceEstimateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short Port1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearlyPerformanceEstimateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Address {
            get {
                return this.AddressField;
            }
            set {
                if ((this.AddressField.Equals(value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.ArrayModel ArrayModel {
            get {
                return this.ArrayModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrayModelField, value) != true)) {
                    this.ArrayModelField = value;
                    this.RaisePropertyChanged("ArrayModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.InverterModel InverterModel {
            get {
                return this.InverterModelField;
            }
            set {
                if ((object.ReferenceEquals(this.InverterModelField, value) != true)) {
                    this.InverterModelField = value;
                    this.RaisePropertyChanged("InverterModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.PanelModel PanelModel {
            get {
                return this.PanelModelField;
            }
            set {
                if ((object.ReferenceEquals(this.PanelModelField, value) != true)) {
                    this.PanelModelField = value;
                    this.RaisePropertyChanged("PanelModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.PanelMounting PanelMounting {
            get {
                return this.PanelMountingField;
            }
            set {
                if ((object.ReferenceEquals(this.PanelMountingField, value) != true)) {
                    this.PanelMountingField = value;
                    this.RaisePropertyChanged("PanelMounting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] PerformanceEstimate {
            get {
                return this.PerformanceEstimateField;
            }
            set {
                if ((object.ReferenceEquals(this.PerformanceEstimateField, value) != true)) {
                    this.PerformanceEstimateField = value;
                    this.RaisePropertyChanged("PerformanceEstimate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Port")]
        public short Port1 {
            get {
                return this.Port1Field;
            }
            set {
                if ((this.Port1Field.Equals(value) != true)) {
                    this.Port1Field = value;
                    this.RaisePropertyChanged("Port1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int YearlyPerformanceEstimate {
            get {
                return this.YearlyPerformanceEstimateField;
            }
            set {
                if ((this.YearlyPerformanceEstimateField.Equals(value) != true)) {
                    this.YearlyPerformanceEstimateField = value;
                    this.RaisePropertyChanged("YearlyPerformanceEstimate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StringCombiner", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class StringCombiner : ConsoleApplication2.ServiceReference1.Hardware {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZonesIOField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZonesIO {
            get {
                return this.ZonesIOField;
            }
            set {
                if ((object.ReferenceEquals(this.ZonesIOField, value) != true)) {
                    this.ZonesIOField = value;
                    this.RaisePropertyChanged("ZonesIO");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldInfo", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class FieldInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArrayModel", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class ArrayModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DerateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfStringsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PanelsPerStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YearlyDegradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] YearlyDegrade2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Derate {
            get {
                return this.DerateField;
            }
            set {
                if ((this.DerateField.Equals(value) != true)) {
                    this.DerateField = value;
                    this.RaisePropertyChanged("Derate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfStrings {
            get {
                return this.NumberOfStringsField;
            }
            set {
                if ((this.NumberOfStringsField.Equals(value) != true)) {
                    this.NumberOfStringsField = value;
                    this.RaisePropertyChanged("NumberOfStrings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PanelsPerString {
            get {
                return this.PanelsPerStringField;
            }
            set {
                if ((this.PanelsPerStringField.Equals(value) != true)) {
                    this.PanelsPerStringField = value;
                    this.RaisePropertyChanged("PanelsPerString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double YearlyDegrade {
            get {
                return this.YearlyDegradeField;
            }
            set {
                if ((this.YearlyDegradeField.Equals(value) != true)) {
                    this.YearlyDegradeField = value;
                    this.RaisePropertyChanged("YearlyDegrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] YearlyDegrade2 {
            get {
                return this.YearlyDegrade2Field;
            }
            set {
                if ((object.ReferenceEquals(this.YearlyDegrade2Field, value) != true)) {
                    this.YearlyDegrade2Field = value;
                    this.RaisePropertyChanged("YearlyDegrade2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InverterModel", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class InverterModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ACvoltsMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DCampsMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DCvoltsMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InverterKWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InverterLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ACvoltsMax {
            get {
                return this.ACvoltsMaxField;
            }
            set {
                if ((this.ACvoltsMaxField.Equals(value) != true)) {
                    this.ACvoltsMaxField = value;
                    this.RaisePropertyChanged("ACvoltsMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DCampsMax {
            get {
                return this.DCampsMaxField;
            }
            set {
                if ((this.DCampsMaxField.Equals(value) != true)) {
                    this.DCampsMaxField = value;
                    this.RaisePropertyChanged("DCampsMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DCvoltsMax {
            get {
                return this.DCvoltsMaxField;
            }
            set {
                if ((this.DCvoltsMaxField.Equals(value) != true)) {
                    this.DCvoltsMaxField = value;
                    this.RaisePropertyChanged("DCvoltsMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InverterKW {
            get {
                return this.InverterKWField;
            }
            set {
                if ((this.InverterKWField.Equals(value) != true)) {
                    this.InverterKWField = value;
                    this.RaisePropertyChanged("InverterKW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InverterLoss {
            get {
                return this.InverterLossField;
            }
            set {
                if ((this.InverterLossField.Equals(value) != true)) {
                    this.InverterLossField = value;
                    this.RaisePropertyChanged("InverterLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PanelModel", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class PanelModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MPPampsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MPPvoltsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TempCoefficientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WattsPerPanelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MPPamps {
            get {
                return this.MPPampsField;
            }
            set {
                if ((this.MPPampsField.Equals(value) != true)) {
                    this.MPPampsField = value;
                    this.RaisePropertyChanged("MPPamps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MPPvolts {
            get {
                return this.MPPvoltsField;
            }
            set {
                if ((this.MPPvoltsField.Equals(value) != true)) {
                    this.MPPvoltsField = value;
                    this.RaisePropertyChanged("MPPvolts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TempCoefficient {
            get {
                return this.TempCoefficientField;
            }
            set {
                if ((this.TempCoefficientField.Equals(value) != true)) {
                    this.TempCoefficientField = value;
                    this.RaisePropertyChanged("TempCoefficient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WattsPerPanel {
            get {
                return this.WattsPerPanelField;
            }
            set {
                if ((this.WattsPerPanelField.Equals(value) != true)) {
                    this.WattsPerPanelField = value;
                    this.RaisePropertyChanged("WattsPerPanel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PanelMounting", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class PanelMounting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AzimuthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MountingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TiltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Azimuth {
            get {
                return this.AzimuthField;
            }
            set {
                if ((this.AzimuthField.Equals(value) != true)) {
                    this.AzimuthField = value;
                    this.RaisePropertyChanged("Azimuth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mounting {
            get {
                return this.MountingField;
            }
            set {
                if ((this.MountingField.Equals(value) != true)) {
                    this.MountingField = value;
                    this.RaisePropertyChanged("Mounting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Tilt {
            get {
                return this.TiltField;
            }
            set {
                if ((this.TiltField.Equals(value) != true)) {
                    this.TiltField = value;
                    this.RaisePropertyChanged("Tilt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Tracking {
            get {
                return this.TrackingField;
            }
            set {
                if ((this.TrackingField.Equals(value) != true)) {
                    this.TrackingField = value;
                    this.RaisePropertyChanged("Tracking");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Site", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class Site : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.Coordinates GPSLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstallDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.Address LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] PerformanceEstimateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.TimeZone TimeZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurnOnDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidDataDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YearlyDegradeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((this.CustomerIDField.Equals(value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Flags {
            get {
                return this.FlagsField;
            }
            set {
                if ((this.FlagsField.Equals(value) != true)) {
                    this.FlagsField = value;
                    this.RaisePropertyChanged("Flags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.Coordinates GPSLocation {
            get {
                return this.GPSLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.GPSLocationField, value) != true)) {
                    this.GPSLocationField = value;
                    this.RaisePropertyChanged("GPSLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallDate {
            get {
                return this.InstallDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallDateField, value) != true)) {
                    this.InstallDateField = value;
                    this.RaisePropertyChanged("InstallDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.Address Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Mask {
            get {
                return this.MaskField;
            }
            set {
                if ((object.ReferenceEquals(this.MaskField, value) != true)) {
                    this.MaskField = value;
                    this.RaisePropertyChanged("Mask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] PerformanceEstimate {
            get {
                return this.PerformanceEstimateField;
            }
            set {
                if ((object.ReferenceEquals(this.PerformanceEstimateField, value) != true)) {
                    this.PerformanceEstimateField = value;
                    this.RaisePropertyChanged("PerformanceEstimate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagLine {
            get {
                return this.TagLineField;
            }
            set {
                if ((object.ReferenceEquals(this.TagLineField, value) != true)) {
                    this.TagLineField = value;
                    this.RaisePropertyChanged("TagLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Term {
            get {
                return this.TermField;
            }
            set {
                if ((this.TermField.Equals(value) != true)) {
                    this.TermField = value;
                    this.RaisePropertyChanged("Term");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.TimeZone TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TurnOnDate {
            get {
                return this.TurnOnDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TurnOnDateField, value) != true)) {
                    this.TurnOnDateField = value;
                    this.RaisePropertyChanged("TurnOnDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidDataDate {
            get {
                return this.ValidDataDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidDataDateField, value) != true)) {
                    this.ValidDataDateField = value;
                    this.RaisePropertyChanged("ValidDataDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double YearlyDegrade {
            get {
                return this.YearlyDegradeField;
            }
            set {
                if ((this.YearlyDegradeField.Equals(value) != true)) {
                    this.YearlyDegradeField = value;
                    this.RaisePropertyChanged("YearlyDegrade");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Coordinates", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class Coordinates : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ElevationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Elevation {
            get {
                return this.ElevationField;
            }
            set {
                if ((this.ElevationField.Equals(value) != true)) {
                    this.ElevationField = value;
                    this.RaisePropertyChanged("Elevation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeZone", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class TimeZone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double GMTOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDaylightSavingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GMTOffset {
            get {
                return this.GMTOffsetField;
            }
            set {
                if ((this.GMTOffsetField.Equals(value) != true)) {
                    this.GMTOffsetField = value;
                    this.RaisePropertyChanged("GMTOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDaylightSaving {
            get {
                return this.IsDaylightSavingField;
            }
            set {
                if ((this.IsDaylightSavingField.Equals(value) != true)) {
                    this.IsDaylightSavingField = value;
                    this.RaisePropertyChanged("IsDaylightSaving");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListItem", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class ListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataBin", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class DataBin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((object.ReferenceEquals(this.TimestampField, value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlertComplete", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class AlertComplete : ConsoleApplication2.ServiceReference1.Alert {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Alert", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication2.ServiceReference1.AlertComplete))]
    public partial class Alert : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlertIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.AlertStates StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlertID {
            get {
                return this.AlertIDField;
            }
            set {
                if ((this.AlertIDField.Equals(value) != true)) {
                    this.AlertIDField = value;
                    this.RaisePropertyChanged("AlertID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HID {
            get {
                return this.HIDField;
            }
            set {
                if ((this.HIDField.Equals(value) != true)) {
                    this.HIDField = value;
                    this.RaisePropertyChanged("HID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.AlertStates State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubCode {
            get {
                return this.SubCodeField;
            }
            set {
                if ((this.SubCodeField.Equals(value) != true)) {
                    this.SubCodeField = value;
                    this.RaisePropertyChanged("SubCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlertStates", Namespace="http://schemas.datacontract.org/2004/07/AE.CoreInterface")]
    public enum AlertStates : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Detected = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelled = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Resolved = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ending = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceConfig", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class DeviceConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ArraySNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BaudField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.DeviceConfig.ComTypes ComTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HIDIntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.NameVal[] ParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PollDelaySecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.RegInfo[] RegistersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ArraySN {
            get {
                return this.ArraySNField;
            }
            set {
                if ((object.ReferenceEquals(this.ArraySNField, value) != true)) {
                    this.ArraySNField = value;
                    this.RaisePropertyChanged("ArraySN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Baud {
            get {
                return this.BaudField;
            }
            set {
                if ((this.BaudField.Equals(value) != true)) {
                    this.BaudField = value;
                    this.RaisePropertyChanged("Baud");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.DeviceConfig.ComTypes ComType {
            get {
                return this.ComTypeField;
            }
            set {
                if ((this.ComTypeField.Equals(value) != true)) {
                    this.ComTypeField = value;
                    this.RaisePropertyChanged("ComType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceType {
            get {
                return this.DeviceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceTypeField, value) != true)) {
                    this.DeviceTypeField = value;
                    this.RaisePropertyChanged("DeviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HID {
            get {
                return this.HIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HIDField, value) != true)) {
                    this.HIDField = value;
                    this.RaisePropertyChanged("HID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HIDInt {
            get {
                return this.HIDIntField;
            }
            set {
                if ((this.HIDIntField.Equals(value) != true)) {
                    this.HIDIntField = value;
                    this.RaisePropertyChanged("HIDInt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.NameVal[] Params {
            get {
                return this.ParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamsField, value) != true)) {
                    this.ParamsField = value;
                    this.RaisePropertyChanged("Params");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PollDelaySeconds {
            get {
                return this.PollDelaySecondsField;
            }
            set {
                if ((this.PollDelaySecondsField.Equals(value) != true)) {
                    this.PollDelaySecondsField = value;
                    this.RaisePropertyChanged("PollDelaySeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.RegInfo[] Registers {
            get {
                return this.RegistersField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistersField, value) != true)) {
                    this.RegistersField = value;
                    this.RaisePropertyChanged("Registers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="DeviceConfig.ComTypes", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
        public enum ComTypes : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Undefined = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            RS232 = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            RS485_2Wire = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            RS485_4Wire = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            TCP = 4,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameVal", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class NameVal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Val {
            get {
                return this.ValField;
            }
            set {
                if ((object.ReferenceEquals(this.ValField, value) != true)) {
                    this.ValField = value;
                    this.RaisePropertyChanged("Val");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegInfo", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class RegInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.RawDataType DataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegNumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.RawDataType DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((this.DataTypeField.Equals(value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumBytes {
            get {
                return this.NumBytesField;
            }
            set {
                if ((this.NumBytesField.Equals(value) != true)) {
                    this.NumBytesField = value;
                    this.RaisePropertyChanged("NumBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegName {
            get {
                return this.RegNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegNameField, value) != true)) {
                    this.RegNameField = value;
                    this.RaisePropertyChanged("RegName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegNum {
            get {
                return this.RegNumField;
            }
            set {
                if ((this.RegNumField.Equals(value) != true)) {
                    this.RegNumField = value;
                    this.RaisePropertyChanged("RegNum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RawDataType", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    public enum RawDataType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Int = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Float = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        String = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Command", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class Command : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CmdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParamField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cmd {
            get {
                return this.CmdField;
            }
            set {
                if ((object.ReferenceEquals(this.CmdField, value) != true)) {
                    this.CmdField = value;
                    this.RaisePropertyChanged("Cmd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Param {
            get {
                return this.ParamField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamField, value) != true)) {
                    this.ParamField = value;
                    this.RaisePropertyChanged("Param");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BinSizes", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    public enum BinSizes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinRaw = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bin15Min = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bin1Hour = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinDay = 1440,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinMonth = 44640,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinYear = 527040,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataField", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class DataField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.Functions FunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.Functions Function {
            get {
                return this.FunctionField;
            }
            set {
                if ((this.FunctionField.Equals(value) != true)) {
                    this.FunctionField = value;
                    this.RaisePropertyChanged("Function");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HID {
            get {
                return this.HIDField;
            }
            set {
                if ((this.HIDField.Equals(value) != true)) {
                    this.HIDField = value;
                    this.RaisePropertyChanged("HID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Functions", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    public enum Functions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Avg = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Last = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Min = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Max = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Diff = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Integral = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiffNonZero = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Heartbeat", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class Heartbeat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] FirmwareVerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GWtypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPaddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastBootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.NameVal[] ParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Build {
            get {
                return this.BuildField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildField, value) != true)) {
                    this.BuildField = value;
                    this.RaisePropertyChanged("Build");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] FirmwareVer {
            get {
                return this.FirmwareVerField;
            }
            set {
                if ((object.ReferenceEquals(this.FirmwareVerField, value) != true)) {
                    this.FirmwareVerField = value;
                    this.RaisePropertyChanged("FirmwareVer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GWtype {
            get {
                return this.GWtypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GWtypeField, value) != true)) {
                    this.GWtypeField = value;
                    this.RaisePropertyChanged("GWtype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPaddress {
            get {
                return this.IPaddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPaddressField, value) != true)) {
                    this.IPaddressField = value;
                    this.RaisePropertyChanged("IPaddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastBoot {
            get {
                return this.LastBootField;
            }
            set {
                if ((this.LastBootField.Equals(value) != true)) {
                    this.LastBootField = value;
                    this.RaisePropertyChanged("LastBoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.NameVal[] Params {
            get {
                return this.ParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamsField, value) != true)) {
                    this.ParamsField = value;
                    this.RaisePropertyChanged("Params");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadData", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class UploadData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotRespondingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication2.ServiceReference1.RegData[] RegDataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HID {
            get {
                return this.HIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HIDField, value) != true)) {
                    this.HIDField = value;
                    this.RaisePropertyChanged("HID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLog {
            get {
                return this.IsLogField;
            }
            set {
                if ((this.IsLogField.Equals(value) != true)) {
                    this.IsLogField = value;
                    this.RaisePropertyChanged("IsLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotResponding {
            get {
                return this.NotRespondingField;
            }
            set {
                if ((this.NotRespondingField.Equals(value) != true)) {
                    this.NotRespondingField = value;
                    this.RaisePropertyChanged("NotResponding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication2.ServiceReference1.RegData[] RegDataList {
            get {
                return this.RegDataListField;
            }
            set {
                if ((object.ReferenceEquals(this.RegDataListField, value) != true)) {
                    this.RegDataListField = value;
                    this.RaisePropertyChanged("RegDataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegData", Namespace="http://schemas.datacontract.org/2004/07/AlsoEnergyAPI.Data")]
    [System.SerializableAttribute()]
    public partial class RegData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegID {
            get {
                return this.RegIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RegIDField, value) != true)) {
                    this.RegIDField = value;
                    this.RaisePropertyChanged("RegID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="alsoenergy_ns", ConfigurationName="ServiceReference1.WebAPI")]
    public interface WebAPI {
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/Login", ReplyAction="alsoenergy_ns/WebAPI/LoginResponse")]
        ConsoleApplication2.ServiceReference1.LoginResult Login(string username, string password, string gatewayID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/Login", ReplyAction="alsoenergy_ns/WebAPI/LoginResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.LoginResult> LoginAsync(string username, string password, string gatewayID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/LoginScada", ReplyAction="alsoenergy_ns/WebAPI/LoginScadaResponse")]
        ConsoleApplication2.ServiceReference1.LoginResult LoginScada(string username, string password, string gatewayID, string scadaKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/LoginScada", ReplyAction="alsoenergy_ns/WebAPI/LoginScadaResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.LoginResult> LoginScadaAsync(string username, string password, string gatewayID, string scadaKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/Logout", ReplyAction="alsoenergy_ns/WebAPI/LogoutResponse")]
        ConsoleApplication2.ServiceReference1.LoginResult Logout(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/Logout", ReplyAction="alsoenergy_ns/WebAPI/LogoutResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.LoginResult> LogoutAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetSiteHardwareList", ReplyAction="alsoenergy_ns/WebAPI/GetSiteHardwareListResponse")]
        ConsoleApplication2.ServiceReference1.HardwareCompleteListResult GetSiteHardwareList(string sessionID, int siteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetSiteHardwareList", ReplyAction="alsoenergy_ns/WebAPI/GetSiteHardwareListResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.HardwareCompleteListResult> GetSiteHardwareListAsync(string sessionID, int siteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetSummaryHardware", ReplyAction="alsoenergy_ns/WebAPI/GetSummaryHardwareResponse")]
        ConsoleApplication2.ServiceReference1.HardwareCompleteListResult GetSummaryHardware(string sessionID, int siteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetSummaryHardware", ReplyAction="alsoenergy_ns/WebAPI/GetSummaryHardwareResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.HardwareCompleteListResult> GetSummaryHardwareAsync(string sessionID, int siteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetSiteDetail", ReplyAction="alsoenergy_ns/WebAPI/GetSiteDetailResponse")]
        ConsoleApplication2.ServiceReference1.SiteDetailResult GetSiteDetail(string sessionID, int siteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetSiteDetail", ReplyAction="alsoenergy_ns/WebAPI/GetSiteDetailResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.SiteDetailResult> GetSiteDetailAsync(string sessionID, int siteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetSiteList", ReplyAction="alsoenergy_ns/WebAPI/GetSiteListResponse")]
        ConsoleApplication2.ServiceReference1.ListResult GetSiteList(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetSiteList", ReplyAction="alsoenergy_ns/WebAPI/GetSiteListResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.ListResult> GetSiteListAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetBinData", ReplyAction="alsoenergy_ns/WebAPI/GetBinDataResponse")]
        ConsoleApplication2.ServiceReference1.DataResult GetBinData(string sessionID, string fromLocal, string toLocal, ConsoleApplication2.ServiceReference1.BinSizes binSize, ConsoleApplication2.ServiceReference1.DataField[] Fields);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetBinData", ReplyAction="alsoenergy_ns/WebAPI/GetBinDataResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.DataResult> GetBinDataAsync(string sessionID, string fromLocal, string toLocal, ConsoleApplication2.ServiceReference1.BinSizes binSize, ConsoleApplication2.ServiceReference1.DataField[] Fields);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetSummaryData", ReplyAction="alsoenergy_ns/WebAPI/GetSummaryDataResponse")]
        ConsoleApplication2.ServiceReference1.DataResult GetSummaryData(string sessionID, string fromLocal, string toLocal, ConsoleApplication2.ServiceReference1.BinSizes binSize, ConsoleApplication2.ServiceReference1.DataField[] Fields);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetSummaryData", ReplyAction="alsoenergy_ns/WebAPI/GetSummaryDataResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.DataResult> GetSummaryDataAsync(string sessionID, string fromLocal, string toLocal, ConsoleApplication2.ServiceReference1.BinSizes binSize, ConsoleApplication2.ServiceReference1.DataField[] Fields);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetAlerts", ReplyAction="alsoenergy_ns/WebAPI/GetAlertsResponse")]
        ConsoleApplication2.ServiceReference1.AlertCompleteListResult GetAlerts(string sessionID, string fromLocal, string toLocal, int siteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetAlerts", ReplyAction="alsoenergy_ns/WebAPI/GetAlertsResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.AlertCompleteListResult> GetAlertsAsync(string sessionID, string fromLocal, string toLocal, int siteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetGatewayConfig", ReplyAction="alsoenergy_ns/WebAPI/GetGatewayConfigResponse")]
        ConsoleApplication2.ServiceReference1.GatewayConfigResult GetGatewayConfig(string sessionID, string gatewayID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetGatewayConfig", ReplyAction="alsoenergy_ns/WebAPI/GetGatewayConfigResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.GatewayConfigResult> GetGatewayConfigAsync(string sessionID, string gatewayID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetGatewayCommands", ReplyAction="alsoenergy_ns/WebAPI/GetGatewayCommandsResponse")]
        ConsoleApplication2.ServiceReference1.CommandsResult GetGatewayCommands(string sessionID, string gatewayID, int commandCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetGatewayCommands", ReplyAction="alsoenergy_ns/WebAPI/GetGatewayCommandsResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.CommandsResult> GetGatewayCommandsAsync(string sessionID, string gatewayID, int commandCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/SendHeartbeat", ReplyAction="alsoenergy_ns/WebAPI/SendHeartbeatResponse")]
        ConsoleApplication2.ServiceReference1.HeartbeatResult SendHeartbeat(string sessionID, string gatewayID, ConsoleApplication2.ServiceReference1.Heartbeat data);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/SendHeartbeat", ReplyAction="alsoenergy_ns/WebAPI/SendHeartbeatResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.HeartbeatResult> SendHeartbeatAsync(string sessionID, string gatewayID, ConsoleApplication2.ServiceReference1.Heartbeat data);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/SendCommandResult", ReplyAction="alsoenergy_ns/WebAPI/SendCommandResultResponse")]
        ConsoleApplication2.ServiceReference1.Result SendCommandResult(string sessionID, string gatewayID, string commandID, string commandResult, string commandResultData);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/SendCommandResult", ReplyAction="alsoenergy_ns/WebAPI/SendCommandResultResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.Result> SendCommandResultAsync(string sessionID, string gatewayID, string commandID, string commandResult, string commandResultData);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/UploadRawData", ReplyAction="alsoenergy_ns/WebAPI/UploadRawDataResponse")]
        ConsoleApplication2.ServiceReference1.UploadResult UploadRawData(string sessionID, ConsoleApplication2.ServiceReference1.UploadData[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/UploadRawData", ReplyAction="alsoenergy_ns/WebAPI/UploadRawDataResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.UploadResult> UploadRawDataAsync(string sessionID, ConsoleApplication2.ServiceReference1.UploadData[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/UploadByteData", ReplyAction="alsoenergy_ns/WebAPI/UploadByteDataResponse")]
        ConsoleApplication2.ServiceReference1.UploadResult UploadByteData(string sessionID, string HID, System.DateTime Timestamp, bool IsLog, bool NotResponding, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/UploadByteData", ReplyAction="alsoenergy_ns/WebAPI/UploadByteDataResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.UploadResult> UploadByteDataAsync(string sessionID, string HID, System.DateTime Timestamp, bool IsLog, bool NotResponding, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetTimestamp", ReplyAction="alsoenergy_ns/WebAPI/GetTimestampResponse")]
        ConsoleApplication2.ServiceReference1.TimestampResult GetTimestamp(string sessionID, string hardwareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetTimestamp", ReplyAction="alsoenergy_ns/WebAPI/GetTimestampResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.TimestampResult> GetTimestampAsync(string sessionID, string hardwareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetObjects", ReplyAction="alsoenergy_ns/WebAPI/GetObjectsResponse")]
        ConsoleApplication2.ServiceReference1.ObjectsResult GetObjects(string sessionID, int[] keys);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetObjects", ReplyAction="alsoenergy_ns/WebAPI/GetObjectsResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.ObjectsResult> GetObjectsAsync(string sessionID, int[] keys);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/UploadDeviceData", ReplyAction="alsoenergy_ns/WebAPI/UploadDeviceDataResponse")]
        ConsoleApplication2.ServiceReference1.UploadResult UploadDeviceData(string sessionID, string HID, System.DateTime Timestamp, bool IsLog, bool NotResponding, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/UploadDeviceData", ReplyAction="alsoenergy_ns/WebAPI/UploadDeviceDataResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.UploadResult> UploadDeviceDataAsync(string sessionID, string HID, System.DateTime Timestamp, bool IsLog, bool NotResponding, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetKeysForGateway", ReplyAction="alsoenergy_ns/WebAPI/GetKeysForGatewayResponse")]
        ConsoleApplication2.ServiceReference1.KeysResult GetKeysForGateway(string sessionID, string GatewayID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetKeysForGateway", ReplyAction="alsoenergy_ns/WebAPI/GetKeysForGatewayResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.KeysResult> GetKeysForGatewayAsync(string sessionID, string GatewayID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetChangedKeys", ReplyAction="alsoenergy_ns/WebAPI/GetChangedKeysResponse")]
        ConsoleApplication2.ServiceReference1.KeysResult GetChangedKeys(string sessionID, string sinceUTC, int[] keys);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetChangedKeys", ReplyAction="alsoenergy_ns/WebAPI/GetChangedKeysResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.KeysResult> GetChangedKeysAsync(string sessionID, string sinceUTC, int[] keys);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetTimeZones", ReplyAction="alsoenergy_ns/WebAPI/GetTimeZonesResponse")]
        ConsoleApplication2.ServiceReference1.ByteObjectsResult GetTimeZones(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="alsoenergy_ns/WebAPI/GetTimeZones", ReplyAction="alsoenergy_ns/WebAPI/GetTimeZonesResponse")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.ByteObjectsResult> GetTimeZonesAsync(string sessionID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebAPIChannel : ConsoleApplication2.ServiceReference1.WebAPI, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebAPIClient : System.ServiceModel.ClientBase<ConsoleApplication2.ServiceReference1.WebAPI>, ConsoleApplication2.ServiceReference1.WebAPI {
        
        public WebAPIClient() {
        }
        
        public WebAPIClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebAPIClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebAPIClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebAPIClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsoleApplication2.ServiceReference1.LoginResult Login(string username, string password, string gatewayID) {
            return base.Channel.Login(username, password, gatewayID);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.LoginResult> LoginAsync(string username, string password, string gatewayID) {
            return base.Channel.LoginAsync(username, password, gatewayID);
        }
        
        public ConsoleApplication2.ServiceReference1.LoginResult LoginScada(string username, string password, string gatewayID, string scadaKey) {
            return base.Channel.LoginScada(username, password, gatewayID, scadaKey);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.LoginResult> LoginScadaAsync(string username, string password, string gatewayID, string scadaKey) {
            return base.Channel.LoginScadaAsync(username, password, gatewayID, scadaKey);
        }
        
        public ConsoleApplication2.ServiceReference1.LoginResult Logout(string sessionID) {
            return base.Channel.Logout(sessionID);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.LoginResult> LogoutAsync(string sessionID) {
            return base.Channel.LogoutAsync(sessionID);
        }
        
        public ConsoleApplication2.ServiceReference1.HardwareCompleteListResult GetSiteHardwareList(string sessionID, int siteID) {
            return base.Channel.GetSiteHardwareList(sessionID, siteID);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.HardwareCompleteListResult> GetSiteHardwareListAsync(string sessionID, int siteID) {
            return base.Channel.GetSiteHardwareListAsync(sessionID, siteID);
        }
        
        public ConsoleApplication2.ServiceReference1.HardwareCompleteListResult GetSummaryHardware(string sessionID, int siteID) {
            return base.Channel.GetSummaryHardware(sessionID, siteID);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.HardwareCompleteListResult> GetSummaryHardwareAsync(string sessionID, int siteID) {
            return base.Channel.GetSummaryHardwareAsync(sessionID, siteID);
        }
        
        public ConsoleApplication2.ServiceReference1.SiteDetailResult GetSiteDetail(string sessionID, int siteID) {
            return base.Channel.GetSiteDetail(sessionID, siteID);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.SiteDetailResult> GetSiteDetailAsync(string sessionID, int siteID) {
            return base.Channel.GetSiteDetailAsync(sessionID, siteID);
        }
        
        public ConsoleApplication2.ServiceReference1.ListResult GetSiteList(string sessionID) {
            return base.Channel.GetSiteList(sessionID);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.ListResult> GetSiteListAsync(string sessionID) {
            return base.Channel.GetSiteListAsync(sessionID);
        }
        
        public ConsoleApplication2.ServiceReference1.DataResult GetBinData(string sessionID, string fromLocal, string toLocal, ConsoleApplication2.ServiceReference1.BinSizes binSize, ConsoleApplication2.ServiceReference1.DataField[] Fields) {
            return base.Channel.GetBinData(sessionID, fromLocal, toLocal, binSize, Fields);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.DataResult> GetBinDataAsync(string sessionID, string fromLocal, string toLocal, ConsoleApplication2.ServiceReference1.BinSizes binSize, ConsoleApplication2.ServiceReference1.DataField[] Fields) {
            return base.Channel.GetBinDataAsync(sessionID, fromLocal, toLocal, binSize, Fields);
        }
        
        public ConsoleApplication2.ServiceReference1.DataResult GetSummaryData(string sessionID, string fromLocal, string toLocal, ConsoleApplication2.ServiceReference1.BinSizes binSize, ConsoleApplication2.ServiceReference1.DataField[] Fields) {
            return base.Channel.GetSummaryData(sessionID, fromLocal, toLocal, binSize, Fields);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.DataResult> GetSummaryDataAsync(string sessionID, string fromLocal, string toLocal, ConsoleApplication2.ServiceReference1.BinSizes binSize, ConsoleApplication2.ServiceReference1.DataField[] Fields) {
            return base.Channel.GetSummaryDataAsync(sessionID, fromLocal, toLocal, binSize, Fields);
        }
        
        public ConsoleApplication2.ServiceReference1.AlertCompleteListResult GetAlerts(string sessionID, string fromLocal, string toLocal, int siteID) {
            return base.Channel.GetAlerts(sessionID, fromLocal, toLocal, siteID);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.AlertCompleteListResult> GetAlertsAsync(string sessionID, string fromLocal, string toLocal, int siteID) {
            return base.Channel.GetAlertsAsync(sessionID, fromLocal, toLocal, siteID);
        }
        
        public ConsoleApplication2.ServiceReference1.GatewayConfigResult GetGatewayConfig(string sessionID, string gatewayID) {
            return base.Channel.GetGatewayConfig(sessionID, gatewayID);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.GatewayConfigResult> GetGatewayConfigAsync(string sessionID, string gatewayID) {
            return base.Channel.GetGatewayConfigAsync(sessionID, gatewayID);
        }
        
        public ConsoleApplication2.ServiceReference1.CommandsResult GetGatewayCommands(string sessionID, string gatewayID, int commandCount) {
            return base.Channel.GetGatewayCommands(sessionID, gatewayID, commandCount);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.CommandsResult> GetGatewayCommandsAsync(string sessionID, string gatewayID, int commandCount) {
            return base.Channel.GetGatewayCommandsAsync(sessionID, gatewayID, commandCount);
        }
        
        public ConsoleApplication2.ServiceReference1.HeartbeatResult SendHeartbeat(string sessionID, string gatewayID, ConsoleApplication2.ServiceReference1.Heartbeat data) {
            return base.Channel.SendHeartbeat(sessionID, gatewayID, data);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.HeartbeatResult> SendHeartbeatAsync(string sessionID, string gatewayID, ConsoleApplication2.ServiceReference1.Heartbeat data) {
            return base.Channel.SendHeartbeatAsync(sessionID, gatewayID, data);
        }
        
        public ConsoleApplication2.ServiceReference1.Result SendCommandResult(string sessionID, string gatewayID, string commandID, string commandResult, string commandResultData) {
            return base.Channel.SendCommandResult(sessionID, gatewayID, commandID, commandResult, commandResultData);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.Result> SendCommandResultAsync(string sessionID, string gatewayID, string commandID, string commandResult, string commandResultData) {
            return base.Channel.SendCommandResultAsync(sessionID, gatewayID, commandID, commandResult, commandResultData);
        }
        
        public ConsoleApplication2.ServiceReference1.UploadResult UploadRawData(string sessionID, ConsoleApplication2.ServiceReference1.UploadData[] data) {
            return base.Channel.UploadRawData(sessionID, data);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.UploadResult> UploadRawDataAsync(string sessionID, ConsoleApplication2.ServiceReference1.UploadData[] data) {
            return base.Channel.UploadRawDataAsync(sessionID, data);
        }
        
        public ConsoleApplication2.ServiceReference1.UploadResult UploadByteData(string sessionID, string HID, System.DateTime Timestamp, bool IsLog, bool NotResponding, byte[] data) {
            return base.Channel.UploadByteData(sessionID, HID, Timestamp, IsLog, NotResponding, data);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.UploadResult> UploadByteDataAsync(string sessionID, string HID, System.DateTime Timestamp, bool IsLog, bool NotResponding, byte[] data) {
            return base.Channel.UploadByteDataAsync(sessionID, HID, Timestamp, IsLog, NotResponding, data);
        }
        
        public ConsoleApplication2.ServiceReference1.TimestampResult GetTimestamp(string sessionID, string hardwareID) {
            return base.Channel.GetTimestamp(sessionID, hardwareID);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.TimestampResult> GetTimestampAsync(string sessionID, string hardwareID) {
            return base.Channel.GetTimestampAsync(sessionID, hardwareID);
        }
        
        public ConsoleApplication2.ServiceReference1.ObjectsResult GetObjects(string sessionID, int[] keys) {
            return base.Channel.GetObjects(sessionID, keys);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.ObjectsResult> GetObjectsAsync(string sessionID, int[] keys) {
            return base.Channel.GetObjectsAsync(sessionID, keys);
        }
        
        public ConsoleApplication2.ServiceReference1.UploadResult UploadDeviceData(string sessionID, string HID, System.DateTime Timestamp, bool IsLog, bool NotResponding, byte[] data) {
            return base.Channel.UploadDeviceData(sessionID, HID, Timestamp, IsLog, NotResponding, data);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.UploadResult> UploadDeviceDataAsync(string sessionID, string HID, System.DateTime Timestamp, bool IsLog, bool NotResponding, byte[] data) {
            return base.Channel.UploadDeviceDataAsync(sessionID, HID, Timestamp, IsLog, NotResponding, data);
        }
        
        public ConsoleApplication2.ServiceReference1.KeysResult GetKeysForGateway(string sessionID, string GatewayID) {
            return base.Channel.GetKeysForGateway(sessionID, GatewayID);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.KeysResult> GetKeysForGatewayAsync(string sessionID, string GatewayID) {
            return base.Channel.GetKeysForGatewayAsync(sessionID, GatewayID);
        }
        
        public ConsoleApplication2.ServiceReference1.KeysResult GetChangedKeys(string sessionID, string sinceUTC, int[] keys) {
            return base.Channel.GetChangedKeys(sessionID, sinceUTC, keys);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.KeysResult> GetChangedKeysAsync(string sessionID, string sinceUTC, int[] keys) {
            return base.Channel.GetChangedKeysAsync(sessionID, sinceUTC, keys);
        }
        
        public ConsoleApplication2.ServiceReference1.ByteObjectsResult GetTimeZones(string sessionID) {
            return base.Channel.GetTimeZones(sessionID);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.ByteObjectsResult> GetTimeZonesAsync(string sessionID) {
            return base.Channel.GetTimeZonesAsync(sessionID);
        }
    }
}
